#!/usr/bin/env python3

import serial
import sys
import time

sport = ""
if len(sys.argv) > 1:
    sport = sys.argv[1]

supcommand = 0
suptext = b" SUP"
speeduptext1 = b"Change to 460.8Kbps baud rate setting of the SCIF."
speeduptext2 = b"Please change to 921.6Kbps baud rate setting of the terminal."
speeduptext3 = b"Please change to 460.8Kbps baud rate setting of the terminal."

#flasherwaittext = b"-- Load Program to SystemRAM ---------------\r\nWork RAM(H'E6300000-H'E632E800) Clear....\r\nplease send !"
flasherwaittext = b"please send !"
flasherreadytext = b">"
extcsdindextext = b"Please Input EXT_CSD Index"
extcsdvaluetext = b"Please Input Value"
writeareatext = b"Select area"
writesectortext = b"Please Input Start Address in sector"
writeaddresstext = b"Please Input Program Start Address"
sendrequesttext = b"please send"
speeduptext1 = b"Change to 460.8Kbps baud rate setting of the SCIF."
speeduptext2 = b"Please change to 921.6Kbps baud rate setting of the terminal."
speeduptext3 = b"Please change to 460.8Kbps baud rate setting of the terminal."

selecttext = b"Select (1-3)>"
sw1text = b"SW1    ON!                Setting OK? (Push Y key)"
topaddrtext = b"Program Top Address & Qspi/HyperFlash Save Address\r\n===== Please Input Program Top Address ============\r\n  Please Input : H'"
slaveaddrtext = b"===== Please Input Qspi/HyperFlash Save Address ===\r\n  Please Input : H'"
pushytext = b" (Push Y key)"
inputtext = b"  Please Input : H'"
clearoktext = b"Clear OK?(y/n)"

flasherfile = "Flash_Writer_SCIF_RZG2L_SMARC_PMIC_DDR4_2GB_1PCS.mot"

bootloadermap = [
	{"part": "1", "sector": "1", "address": "11E00", "slave" : "000000", "file": "bl2_bp-smarc-rzg2l_pmic.srec"},
	{"part": "1", "sector": "100", "address": "0", "slave" : "1D200", "file": "fip-smarc-rzg2l_pmic.srec"},
]

if len(sport) == 0:
    sport = "/dev/ttyUSB0"

print("G2L flash burner helper started.")
sp = serial.Serial(sport, 115200, timeout=0.5)
if sp is None:
    print("Failed to open serial port %s!" % sport)
    exit()

print("Open serial port %s successfully." % sport)

print("Waiting for download mode prompt...")
while True:
    rdata = sp.read(8192)
    if flasherwaittext in rdata:
        break

print("Download mode detected, sending flash burner...")
f = open(flasherfile, "rb")
tlen = 0
while True:
    fdata = f.read(4096)
    fdatalen = len(fdata)
    if fdatalen == 0:
        break;
    sp.write(fdata)
    tlen += fdatalen
    print('\r%d bytes completed.' % tlen, end='')
f.close()
sp.write(b'.\r\n')
print('')
while True:
    rdata = sp.read(4096)
    if flasherreadytext in rdata:
        break
sp.write(b'\r\n')
while True:
    rdata = sp.read(4096)
    if flasherreadytext in rdata:
        break
print(">")

sspeed = 115200

###########################################################
sp.close()
sp = serial.Serial(sport, sspeed, timeout=0.5)

sp.write(b'\r\n')
while True:
    rdata = sp.read(4096)
    if flasherreadytext in rdata:
        break

###########################################################

sp.write(b'\r\n')
while True:
    rdata = sp.read(4096)
    if flasherreadytext in rdata:
        break

for i in range(0, (len(bootloadermap) - 0)):
    print("XLS2: %s         " % bootloadermap[i]['file'])
    sp.write(b'XLS2\r\n')
    while True:
        rdata = sp.read(8192)
        if inputtext in rdata:
            break
    print("TOP: %s " % bootloadermap[i]['address'])
    cmd = str("%s\r\n" % bootloadermap[i]['address'])
    sp.write(cmd.encode())
    while True:
        rdata = sp.read(8192)
        if inputtext in rdata:
            break
    print("SLAVE: %s " % bootloadermap[i]['slave'])
    cmd = str("%s\r\n" % bootloadermap[i]['slave'])
    sp.write(cmd.encode())
    while True:
        rdata = sp.read(8192)
        if sendrequesttext in rdata:
            break
    f = open(bootloadermap[i]['file'], "rb")
    tlen = 0
    while True:
        fdata = f.read(8192)
        fdatalen = len(fdata)
        if fdatalen == 0:
            break;
        sp.write(fdata)
        tlen += fdatalen
        print('\r%d bytes completed.\r' % tlen, end='')
    f.close()
    sp.write(b'.\r\n')
    for i in range(16):
        rdata = sp.read(8192)
        if clearoktext in rdata:
            break
    sp.write(b'y\r\n')
    for i in range(16):
        rdata = sp.read(4096)
        if flasherreadytext in rdata:
            break

sp.close()
print("")
print("all succeeded. ")
exit()

